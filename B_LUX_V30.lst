C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE B_LUX_V30
OBJECT MODULE PLACED IN B_LUX_V30.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lib\B_LUX_V30.c LARGE BROWSE INCDIR(.\lib) DEBUG OBJECTEXTEND PRINT(.\B_LUX
                    -_V30.lst) TABS(2) OBJECT(B_LUX_V30.obj)

line level    source

   1          //***************************************
   2          // B_LUX_V30采集程序
   3          //****************************************
   4          #include "B_LUX_V30.h"
   5          
   6          
   7          /*---------------------------------------------------------------------
   8           功能描述: 延时纳秒 不同的工作环境,需要调整此函数
   9           参数说明: 无 
  10           函数返回: 无
  11           ---------------------------------------------------------------------*/
  12          vid B_LUX_delay_nms(uint16 k) 
  13          {           
  14   1        uint16 i,j;       
  15   1        for(i=0;i<k;i++)
  16   1        {     
  17   2          for(j=0;j<2000;j++)     
  18   2          {
  19   3            ;
  20   3          }
  21   2        }           
  22   1      }         
  23          
  24          /*---------------------------------------------------------------------
  25           功能描述: 延时5微秒  不同的工作环境,需要调整此函数
  26           参数说明: 无 
  27           函数返回: 无
  28           ---------------------------------------------------------------------*/
  29          vid B_LUX_Delay5us()
  30          {
  31   1        _nop_(); 
  32   1        _nop_(); 
  33   1        _nop_(); 
  34   1        _nop_(); 
  35   1        _nop_(); 
  36   1        _nop_(); 
  37   1        _nop_(); 
  38   1      }
  39          
  40          /*---------------------------------------------------------------------
  41           功能描述: 延时5毫秒  不同的工作环境,需要调整此函数
  42           参数说明: 无 
  43           函数返回: 无
  44           ---------------------------------------------------------------------*/
  45          vid B_LUX_Delay5ms()
  46          {
  47   1        uint16 n = 20000;
  48   1        
  49   1        while (n--);
  50   1      }
  51          
  52          /*---------------------------------------------------------------------
  53           功能描述: 起始信号
  54           参数说明: 无 
C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 2   

  55           函数返回: 无
  56           ---------------------------------------------------------------------*/
  57          vid B_LUX_Start()
  58          {
  59   1        B_LUX_SDA0_H;                         //拉高数据线
  60   1        B_LUX_SCL0_H;                         //拉高时钟线
  61   1        B_LUX_Delay5us();                     //延时
  62   1        B_LUX_SDA0_L;                         //产生下降沿
  63   1        B_LUX_Delay5us();                     //延时
  64   1        B_LUX_SCL0_L;                         //拉低时钟线
  65   1      }
  66          
  67          /*---------------------------------------------------------------------
  68           功能描述: 停止信号
  69           参数说明: 无 
  70           函数返回: 无
  71           ---------------------------------------------------------------------*/
  72          vid B_LUX_Stop()
  73          {
  74   1        B_LUX_SDA0_L;                         //拉低数据线
  75   1        B_LUX_SCL0_H;                         //拉高时钟线
  76   1        B_LUX_Delay5us();                     //延时
  77   1        B_LUX_SDA0_H;                         //产生上升沿
  78   1        B_LUX_Delay5us();                     //延时
  79   1        B_LUX_SCL0_L;
  80   1        B_LUX_Delay5us();
  81   1      }
  82          
  83          /*---------------------------------------------------------------------
  84           功能描述: 发送应答信号
  85           参数说明: ack - 应答信号(0:ACK 1:NAK)
  86           函数返回: 无
  87           ---------------------------------------------------------------------*/
  88          vid B_LUX_SendACK(uint8 ack)
  89          {
  90   1        if (ack&0x01) B_LUX_SDA0_H;   //写应答信号
  91   1        else  B_LUX_SDA0_L;
  92   1        
  93   1        B_LUX_SCL0_H;                         //拉高时钟线
  94   1        B_LUX_Delay5us();                     //延时
  95   1        B_LUX_SCL0_L;                         //拉低时钟线
  96   1        B_LUX_Delay5us();
  97   1        B_LUX_SDA0_H;
  98   1        B_LUX_Delay5us();                     //延时
  99   1      }
 100          
 101          /*---------------------------------------------------------------------
 102           功能描述: 接收应答信号
 103           参数说明: 无
 104           函数返回: 返回应答信号
 105           ---------------------------------------------------------------------*/
 106          uint8 B_LUX_RecvACK()
 107          {
 108   1        uint8 CY = 0x00;
 109   1        B_LUX_SDA0_H;
 110   1        
 111   1        B_LUX_SDA0_I;
 112   1        
 113   1        B_LUX_SCL0_H;                         //拉高时钟线
 114   1        B_LUX_Delay5us();                     //延时
 115   1        
 116   1        
C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 3   

 117   1        CY |= B_LUX_SDA0_DAT;                 //读应答信号
 118   1        
 119   1        B_LUX_Delay5us();                     //延时
 120   1        
 121   1        B_LUX_SCL0_L;                         //拉低时钟线
 122   1        
 123   1        B_LUX_SDA0_O;
 124   1        
 125   1        return CY;
 126   1      }
 127          
 128          /*---------------------------------------------------------------------
 129           功能描述: 向IIC总线发送一个字节数据
 130           参数说明: dat - 写字节
 131           函数返回: 无
 132           ---------------------------------------------------------------------*/
 133          vid B_LUX_SendByte(uint8 dat)
 134          {
 135   1        uint8 i;
 136   1        
 137   1        for (i=0; i<8; i++)               //8位计数器
 138   1        {
 139   2          if (dat&0x80) B_LUX_SDA0_H;
 140   2          else  B_LUX_SDA0_L;                   //送数据口
 141   2          
 142   2          B_LUX_Delay5us();                 //延时
 143   2          B_LUX_SCL0_H;                   //拉高时钟线
 144   2          B_LUX_Delay5us();                 //延时
 145   2          B_LUX_SCL0_L;                   //拉低时钟线
 146   2          B_LUX_Delay5us();                 //延时
 147   2          dat <<= 1;                    //移出数据的最高位
 148   2        }
 149   1        
 150   1        B_LUX_RecvACK();
 151   1      }
 152          
 153          /*---------------------------------------------------------------------
 154           功能描述: 从IIC总线接收一个字节数据
 155           参数说明: 无
 156           函数返回: 接收字节
 157           ---------------------------------------------------------------------*/
 158          uint8 B_LUX_RecvByte()
 159          {
 160   1        uint8 i;
 161   1        uint8 dat = 0;
 162   1        B_LUX_SDA0_I;
 163   1        
 164   1        B_LUX_SDA0_H;                         //使能内部上拉,准备读取数据,
 165   1        for (i=0; i<8; i++)                   //8位计数器
 166   1        {
 167   2          
 168   2          
 169   2          B_LUX_SCL0_H;                       //拉高时钟线
 170   2          B_LUX_Delay5us();               //延时
 171   2          dat |= B_LUX_SDA0_DAT;              //读数据               
 172   2          B_LUX_SCL0_L;                       //拉低时钟线
 173   2          B_LUX_Delay5us();               //延时
 174   2          
 175   2          if (i<7)
 176   2            dat <<= 1;
 177   2            
 178   2        }
C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 4   

 179   1        B_LUX_SDA0_O;
 180   1        
 181   1        return dat;
 182   1      }
 183          
 184          /*---------------------------------------------------------------------
 185           功能描述: 写MAX44009
 186           参数说明: REG_Address - 寄存器地址
 187           函数返回: 无
 188           ---------------------------------------------------------------------*/
 189          vid B_LUX_Single_Write(uint8 REG_Address, uint8 REG_data)
 190          {
 191   1        B_LUX_Start();                                        //起始信号
 192   1        B_LUX_SendByte(B_LUX_SlaveAddress);                   //发送设备地址+写信号
 193   1        B_LUX_SendByte(REG_Address);                          //内部寄存器地址，请参考中文pdf22页 
 194   1        B_LUX_SendByte(REG_data);                             //内部寄存器数据，请参考中文pdf22页 
 195   1        B_LUX_Stop();                                         //发送停止信号
 196   1        B_LUX_Delay5ms();
 197   1      }
 198          
 199          /*---------------------------------------------------------------------
 200           功能描述: 读MAX44009内部数据
 201           参数说明: 无
 202           函数返回: 无
 203           ---------------------------------------------------------------------*/
 204          uint8 B_LUX_read(uint8 REG_Address)
 205          {  
 206   1        uint8 rval = 0;
 207   1        B_LUX_Start();                                        //起始信号
 208   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 209   1        B_LUX_SendByte(REG_Address);                          //内部寄存器地址，请参考中文pdf22页 
 210   1        B_LUX_Start();                                        //起始信号
 211   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 212   1        rval = B_LUX_RecvByte();                              //BUF[0]存储0x32地址中的数据
 213   1        B_LUX_SendACK(1);                                     //回应ACK
 214   1        B_LUX_Stop();                                         //停止信号
 215   1        B_LUX_Delay5ms();
 216   1        
 217   1        return rval;
 218   1        
 219   1      }
 220          
 221          /*---------------------------------------------------------------------
 222           功能描述: 读MAX44009内部数据
 223           参数说明: 无
 224           函数返回: 无
 225           ---------------------------------------------------------------------*/
 226          vid B_LUX_Multi_read(uint8 REG_Address1, uint8 REG_Address2, uint8 *vBuf)
 227          {     
 228   1        //寄存器1
 229   1        B_LUX_Start();                                        //起始信号
 230   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 231   1        B_LUX_SendByte(REG_Address1);                         //内部寄存器地址，请参考中文pdf22页 
 232   1        B_LUX_Start();                                        //起始信号
 233   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 234   1        vBuf[0] = B_LUX_RecvByte();                           //BUF[0]存储0x32地址中的数据
 235   1        B_LUX_SendACK(1);
 236   1      
 237   1        //连续寄存器2
 238   1        B_LUX_Start();                                        //起始信号
 239   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 240   1        B_LUX_SendByte(REG_Address2);                         //内部寄存器地址，请参考中文pdf22页 
C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 5   

 241   1        B_LUX_Start();                                        //起始信号
 242   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 243   1        vBuf[1] = B_LUX_RecvByte();                           //BUF[0]存储0x32地址中的数据
 244   1        B_LUX_SendACK(1);                                     //回应ACK
 245   1        
 246   1        
 247   1        B_LUX_Stop();                                         //停止信号
 248   1        B_LUX_Delay5ms();
 249   1      }
 250          
 251          /*---------------------------------------------------------------------
 252           功能描述: 传感器寄存器配置函数
 253           参数说明: val - 配置参数
 254           函数返回: 无
 255           ---------------------------------------------------------------------*/
 256          vid B_Lux_RegCfg(uint8 val)
 257          {
 258   1        uint8 valCfg = 0;
 259   1        
 260   1        valCfg = (0x00<<7)|(0x00<<6)|(0x00<<3)|(0x00<<0);               //默认800ms采集一次   //配置为自动动模式
             -  //配置积分时间800ms (光照精度0.045Lux  最大光照度 188006.4Lux)                      
 261   1        
 262   1        if (val&0x40)                //采集方式
 263   1        {
 264   2          valCfg |= 0x40;
 265   2        }
 266   1        if (val&0x40)                //采集模式 0-自动模式  1-手动模式
 267   1        {
 268   2          valCfg |= 0x40;
 269   2        }
 270   1        if (val&0x08)                //分流比
 271   1        {
 272   2          valCfg |= 0x08;
 273   2        }
 274   1        if (val&0x04)                //积分时间
 275   1        {
 276   2          valCfg |= 0x04;
 277   2        }
 278   1        if (val&0x02)
 279   1        {
 280   2          valCfg |= 0x02;
 281   2        }
 282   1        if (val&0x01)
 283   1        {
 284   2          valCfg |= 0x01;
 285   2        }
 286   1        
 287   1        B_LUX_Single_Write(0x02, valCfg);                               //配置参数
 288   1      }
 289          
 290          /*---------------------------------------------------------------------
 291           功能描述: 初始化光照传感器
 292           参数说明: 无
 293           函数返回: 无
 294           ---------------------------------------------------------------------*/
 295          vid B_LUX_Init()
 296          {
 297   1        
 298   1        B_LUX_SCL0_O;
 299   1        B_LUX_SDA0_O;
 300   1        B_LUX_SCL0_H;
 301   1        B_LUX_SDA0_H;
C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 6   

 302   1        
 303   1        B_LUX_delay_nms(100);                                           //延时100ms
 304   1        
 305   1        B_Lux_RegCfg(0x00);
 306   1        
 307   1      }
 308          
 309            
 310          /*---------------------------------------------------------------------
 311           功能描述: 光照读取函数
 312           参数说明: 无
 313           函数返回: 返回光照值
 314           ---------------------------------------------------------------------*/
 315          vid B_LUX_GetLux(uint32 *vLux)
 316          {
 317   1        uint8   vIndex = 0;                     //指数
 318   1        uint8   vMantissa = 0;                  //尾数
 319   1        uint8   vLuxBuf[3];
 320   1        uint16  val16 = 0;
 321   1        fp32    vflux = 0.0;
 322   1        
 323   1        B_LUX_Multi_read(0x03, 0x04, vLuxBuf);
 324   1        
 325   1        //指数
 326   1        vIndex = vLuxBuf[0]&0xF0;
 327   1        vIndex >>= 4;
 328   1        
 329   1        //尾数
 330   1        vMantissa   = (vLuxBuf[0]&0x0F);
 331   1        vMantissa <<= 4;
 332   1        vMantissa  |= (vLuxBuf[1]&0x0F);
 333   1        
 334   1        if (vIndex == 0x01)
 335   1        {
 336   2          vIndex = 0x00;
 337   2        }
 338   1        else if (vIndex > 0x0E)
 339   1        {
 340   2          vIndex = 0x0E;
 341   2        }
 342   1        
 343   1        val16 = (0x01<<vIndex);
 344   1        
 345   1        vflux = ( (fp32)val16 ) * ( (fp32)vMantissa) * 0.045;
 346   1        
 347   1        (*vLux) = (uint32)(vflux*1000.0);                      //*1000 小数位
 348   1        //(*vLux) = (*vLux) * 1.4;                               //小球透明外壳矫正
 349   1        B_LUX_delay_nms(1000);                                 //延时1s
 350   1        
 351   1      } 
 352          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    606    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.52.0.0   B_LUX_V30                                                         06/13/2016 10:44:36 PAGE 7   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
