C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE B_LUX_V32
OBJECT MODULE PLACED IN B_LUX_V32.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE B_LUX_V32.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          //***************************************
   2          // B_LUX_V30采集程序
   3          //****************************************
   4          #include "B_LUX_V32.h"
   5          
   6          
   7          /*---------------------------------------------------------------------
   8           功能描述: 延时纳秒 不同的工作环境,需要调整此函数
   9           参数说明: 无   
  10           函数返回: 无
  11           ---------------------------------------------------------------------*/
  12          vid B_LUX_delay_nms(uint16 k)   
  13          {                                               
  14   1        uint16 i,j;                           
  15   1        for(i=0;i<k;i++)
  16   1        {                     
  17   2          for(j=0;j<2000;j++)                 
  18   2          {
  19   3            ;
  20   3          }
  21   2        }                                             
  22   1      }                                       
  23          
  24          /*---------------------------------------------------------------------
  25           功能描述: 延时5微秒  不同的工作环境,需要调整此函数
  26           参数说明: 无   
  27           函数返回: 无
  28           ---------------------------------------------------------------------*/
  29          vid B_LUX_Delay5us()
  30          {
  31   1       unsigned char i;
  32   1      
  33   1              _nop_();
  34   1              i = 11;
  35   1              while (--i);
  36   1      }
  37          
  38          /*---------------------------------------------------------------------
  39           功能描述: 延时5毫秒  不同的工作环境,需要调整此函数
  40           参数说明: 无   
  41           函数返回: 无
  42           ---------------------------------------------------------------------*/
  43          vid B_LUX_Delay5ms()
  44          {
  45   1        uint16 n = 20000;
  46   1        
  47   1        while (n--);
  48   1      }
  49          
  50          /*---------------------------------------------------------------------
  51           功能描述: 起始信号
  52           参数说明: 无   
  53           函数返回: 无
  54           ---------------------------------------------------------------------*/
  55          vid B_LUX_Start()
C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 2   

  56          {
  57   1        B_LUX_SDA0_H;                         //拉高数据线
  58   1        B_LUX_SCL0_H;                         //拉高时钟线
  59   1        B_LUX_Delay5us();                     //延时
  60   1        B_LUX_SDA0_L;                         //产生下降沿
  61   1        B_LUX_Delay5us();                     //延时
  62   1        B_LUX_SCL0_L;                         //拉低时钟线
  63   1      }
  64          
  65          /*---------------------------------------------------------------------
  66           功能描述: 停止信号
  67           参数说明: 无   
  68           函数返回: 无
  69           ---------------------------------------------------------------------*/
  70          vid B_LUX_Stop()
  71          {
  72   1        B_LUX_SDA0_L;                         //拉低数据线
  73   1        B_LUX_SCL0_H;                         //拉高时钟线
  74   1        B_LUX_Delay5us();                     //延时
  75   1        B_LUX_SDA0_H;                         //产生上升沿
  76   1        B_LUX_Delay5us();                     //延时
  77   1        B_LUX_SCL0_L;
  78   1        B_LUX_Delay5us();
  79   1      }
  80          
  81          /*---------------------------------------------------------------------
  82           功能描述: 发送应答信号
  83           参数说明: ack - 应答信号(0:ACK 1:NAK)
  84           函数返回: 无
  85           ---------------------------------------------------------------------*/
  86          vid B_LUX_SendACK(uint8 ack)
  87          {
  88   1        if (ack&0x01) B_LUX_SDA0_H;           //写应答信号
  89   1        else  B_LUX_SDA0_L;
  90   1        
  91   1        B_LUX_SCL0_H;                         //拉高时钟线
  92   1        B_LUX_Delay5us();                     //延时
  93   1        B_LUX_SCL0_L;                         //拉低时钟线
  94   1        B_LUX_Delay5us();
  95   1        B_LUX_SDA0_H;
  96   1        B_LUX_Delay5us();                     //延时
  97   1      }
  98          
  99          /*---------------------------------------------------------------------
 100           功能描述: 接收应答信号
 101           参数说明: 无
 102           函数返回: 返回应答信号
 103           ---------------------------------------------------------------------*/
 104          uint8 B_LUX_RecvACK()
 105          {
 106   1        uint8 CY = 0x00;
 107   1        B_LUX_SDA0_H;
 108   1        
 109   1        B_LUX_SDA0_I;
 110   1        
 111   1        B_LUX_SCL0_H;                         //拉高时钟线
 112   1        B_LUX_Delay5us();                     //延时
 113   1        
 114   1        
 115   1        CY |= B_LUX_SDA0_DAT;                 //读应答信号
 116   1        
 117   1        B_LUX_Delay5us();                     //延时
C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 3   

 118   1        
 119   1        B_LUX_SCL0_L;                         //拉低时钟线
 120   1        
 121   1        B_LUX_SDA0_O;
 122   1        
 123   1        return CY;
 124   1      }
 125          
 126          /*---------------------------------------------------------------------
 127           功能描述: 向IIC总线发送一个字节数据
 128           参数说明: dat - 写字节
 129           函数返回: 无
 130           ---------------------------------------------------------------------*/
 131          vid B_LUX_SendByte(uint8 dat)
 132          {
 133   1        uint8 i;
 134   1        
 135   1        for (i=0; i<8; i++)                           //8位计数器
 136   1        {
 137   2          if (dat&0x80)       B_LUX_SDA0_H;
 138   2          else        B_LUX_SDA0_L;                   //送数据口
 139   2          
 140   2          B_LUX_Delay5us();                           //延时
 141   2          B_LUX_SCL0_H;                               //拉高时钟线
 142   2          B_LUX_Delay5us();                           //延时
 143   2          B_LUX_SCL0_L;                               //拉低时钟线
 144   2          B_LUX_Delay5us();                           //延时
 145   2          dat <<= 1;                                  //移出数据的最高位
 146   2        }
 147   1        
 148   1        B_LUX_RecvACK();
 149   1      }
 150          
 151          /*---------------------------------------------------------------------
 152           功能描述: 从IIC总线接收一个字节数据
 153           参数说明: 无
 154           函数返回: 接收字节
 155           ---------------------------------------------------------------------*/
 156          uint8 B_LUX_RecvByte()
 157          {
 158   1        uint8 i;
 159   1        uint8 dat = 0;
 160   1        B_LUX_SDA0_I;
 161   1        
 162   1        B_LUX_SDA0_H;                         //使能内部上拉,准备读取数据,
 163   1        for (i=0; i<8; i++)                   //8位计数器
 164   1        {
 165   2          
 166   2          
 167   2          B_LUX_SCL0_H;                       //拉高时钟线
 168   2          B_LUX_Delay5us();                   //延时
 169   2          dat |= B_LUX_SDA0_DAT;              //读数据               
 170   2          B_LUX_SCL0_L;                       //拉低时钟线
 171   2          B_LUX_Delay5us();                   //延时
 172   2          
 173   2          if (i<7)
 174   2            dat <<= 1;
 175   2              
 176   2        }
 177   1        B_LUX_SDA0_O;
 178   1        
 179   1        return dat;
C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 4   

 180   1      }
 181          
 182          /*---------------------------------------------------------------------
 183           功能描述: 写MAX44009
 184           参数说明: REG_Address - 寄存器地址
 185           函数返回: 无
 186           ---------------------------------------------------------------------*/
 187          vid B_LUX_Single_Write(uint8 REG_Address, uint8 REG_data)
 188          {
 189   1        B_LUX_Start();                                        //起始信号
 190   1        B_LUX_SendByte(B_LUX_SlaveAddress);                   //发送设备地址+写信号
 191   1        B_LUX_SendByte(REG_Address);                          //内部寄存器地址，请参考中文pdf22页 
 192   1        B_LUX_SendByte(REG_data);                             //内部寄存器数据，请参考中文pdf22页 
 193   1        B_LUX_Stop();                                         //发送停止信号
 194   1        B_LUX_Delay5ms();
 195   1      }
 196          
 197          /*---------------------------------------------------------------------
 198           功能描述: 读MAX44009内部数据
 199           参数说明: 无
 200           函数返回: 无
 201           ---------------------------------------------------------------------*/
 202          uint8 B_LUX_read(uint8 REG_Address)
 203          {  
 204   1        uint8 rval = 0;
 205   1        B_LUX_Start();                                        //起始信号
 206   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 207   1        B_LUX_SendByte(REG_Address);                          //内部寄存器地址，请参考中文pdf22页 
 208   1        B_LUX_Start();                                        //起始信号
 209   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 210   1        rval = B_LUX_RecvByte();                              //BUF[0]存储0x32地址中的数据
 211   1        B_LUX_SendACK(1);                                     //回应ACK
 212   1        B_LUX_Stop();                                         //停止信号
 213   1        B_LUX_Delay5ms();
 214   1        
 215   1        return rval;
 216   1        
 217   1      }
 218          
 219          /*---------------------------------------------------------------------
 220           功能描述: 读MAX44009内部数据
 221           参数说明: 无
 222           函数返回: 无
 223           ---------------------------------------------------------------------*/
 224          vid B_LUX_Multi_read(uint8 REG_Address1, uint8 REG_Address2, uint8 *vBuf)
 225          {       
 226   1        //寄存器1
 227   1        B_LUX_Start();                                        //起始信号
 228   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 229   1        B_LUX_SendByte(REG_Address1);                         //内部寄存器地址，请参考中文pdf22页 
 230   1        B_LUX_Start();                                        //起始信号
 231   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 232   1        vBuf[0] = B_LUX_RecvByte();                           //BUF[0]存储0x32地址中的数据
 233   1        B_LUX_SendACK(1);
 234   1      
 235   1        //连续寄存器2
 236   1        B_LUX_Start();                                        //起始信号
 237   1        B_LUX_SendByte(B_LUX_SlaveAddress+0);                 //发送设备地址+读信号
 238   1        B_LUX_SendByte(REG_Address2);                         //内部寄存器地址，请参考中文pdf22页 
 239   1        B_LUX_Start();                                        //起始信号
 240   1        B_LUX_SendByte(B_LUX_SlaveAddress+1);                 //发送设备地址+读信号
 241   1        vBuf[1] = B_LUX_RecvByte();                           //BUF[0]存储0x32地址中的数据
C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 5   

 242   1        B_LUX_SendACK(1);                                     //回应ACK
 243   1        
 244   1        
 245   1        B_LUX_Stop();                                         //停止信号
 246   1        B_LUX_Delay5ms();
 247   1      }
 248          
 249          /*---------------------------------------------------------------------
 250           功能描述: 传感器寄存器配置函数
 251           参数说明: val - 配置参数
 252           函数返回: 无
 253           ---------------------------------------------------------------------*/
 254          vid B_Lux_RegCfg(uint8 val)
 255          {
 256   1        uint8 valCfg = 0;
 257   1        
 258   1        valCfg = (0x00<<7)|(0x00<<6)|(0x00<<3)|(0x00<<0);               //默认800ms采集一次   //配置为自动动模式
             -  //配置积分时间800ms (光照精度0.045Lux  最大光照度 188006.4Lux)                      
 259   1        
 260   1        if (val&0x40)                //采集方式
 261   1        {
 262   2          valCfg |= 0x40;
 263   2        }
 264   1        if (val&0x40)                //采集模式 0-自动模式  1-手动模式
 265   1        {
 266   2          valCfg |= 0x40;
 267   2        }
 268   1        if (val&0x08)                //分流比
 269   1        {
 270   2          valCfg |= 0x08;
 271   2        }
 272   1        if (val&0x04)                //积分时间
 273   1        {
 274   2          valCfg |= 0x04;
 275   2        }
 276   1        if (val&0x02)
 277   1        {
 278   2          valCfg |= 0x02;
 279   2        }
 280   1        if (val&0x01)
 281   1        {
 282   2          valCfg |= 0x01;
 283   2        }
 284   1        
 285   1        B_LUX_Single_Write(0x02, valCfg);                               //配置参数
 286   1      }
 287          
 288          /*---------------------------------------------------------------------
 289           功能描述: 初始化光照传感器
 290           参数说明: 无
 291           函数返回: 无
 292           ---------------------------------------------------------------------*/
 293          vid B_LUX_Init()
 294          {
 295   1        
 296   1        B_LUX_SCL0_O;
 297   1        B_LUX_SDA0_O;
 298   1        B_LUX_SCL0_H;
 299   1        B_LUX_SDA0_H;
 300   1        
 301   1        B_LUX_delay_nms(100);                                           //延时100ms
 302   1        
C51 COMPILER V7.06   B_LUX_V32                                                             01/18/2017 15:02:03 PAGE 6   

 303   1        B_Lux_RegCfg(0x00);
 304   1        
 305   1      }
 306          
 307            
 308          /*---------------------------------------------------------------------
 309           功能描述: 光照读取函数
 310           参数说明: 无
 311           函数返回: 返回光照值
 312           ---------------------------------------------------------------------*/
 313          vid B_LUX_GetLux(uint32 *vLux)
 314          {
 315   1        uint8   vIndex = 0;                     //指数
 316   1        uint8   vMantissa = 0;                  //尾数
 317   1        uint8   vLuxBuf[3];
 318   1        uint16  val16 = 0;
 319   1        fp32    vflux = 0.0;
 320   1        
 321   1        B_LUX_Multi_read(0x03, 0x04, vLuxBuf);
 322   1        
 323   1        //指数
 324   1        vIndex = vLuxBuf[0]&0xF0;
 325   1        vIndex >>= 4;
 326   1        
 327   1        //尾数
 328   1        vMantissa   = (vLuxBuf[0]&0x0F);
 329   1        vMantissa <<= 4;
 330   1        vMantissa  |= (vLuxBuf[1]&0x0F);
 331   1        
 332   1        if (vIndex == 0x01)
 333   1        {
 334   2          vIndex = 0x00;
 335   2        }
 336   1        else if (vIndex > 0x0E)
 337   1        {
 338   2          vIndex = 0x0E;
 339   2        }
 340   1        
 341   1        val16 = (0x01<<vIndex);
 342   1        
 343   1        vflux = ( (fp32)val16 ) * ( (fp32)vMantissa) * 0.045;
 344   1        
 345   1        //(*vLux) = (uint32)(vflux*1000.0);                      //*1000 小数位
 346   1        (*vLux) = (vflux * 1.4);                               //小球透明外壳矫正
 347   1        B_LUX_delay_nms(1000);                                 //延时1s
 348   1        
 349   1      } 
 350          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    610    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      14
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
