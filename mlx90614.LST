C51 COMPILER V7.06   MLX90614                                                              02/19/2020 11:27:54 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MLX90614
OBJECT MODULE PLACED IN mlx90614.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE mlx90614.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          #include  "config.h"
   2          #include "mlx90614.h"
   3          
   4          
   5          #define Nack_counter 10
   6          
   7          //************数据定义****************
   8          
   9          
  10          //mlx90614 端口定义
  11          sbit SCL=P0^7;//时钟线
  12          sbit SDA=P0^6;//数据线
  13          
  14          unsigned char bit_out=1;
  15          unsigned char bit_in=1;
  16          
  17          unsigned char DataH,DataL,Pecreg;
  18          
  19          void start_bit(void)
  20          {
  21   1              SDA=1;
  22   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  23   1              SCL=1;
  24   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  25   1              SDA=0;
  26   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  27   1              SCL=0;
  28   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  29   1      }
  30          
  31          void stop_bit(void)
  32          {
  33   1              SCL=0;
  34   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  35   1              SDA=0;
  36   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  37   1              SCL=1;
  38   1              _nop_();_nop_();_nop_();_nop_();_nop_();
  39   1              SDA=1;
  40   1      }
  41          
  42          
  43          //---------发送一个字节---------
  44          void tx_byte(unsigned char dat_byte)
  45          {
  46   1              char i,n,dat;
  47   1              n=Nack_counter;
  48   1      
  49   1              dat=dat_byte;
  50   1              for(i=0;i<8;i++)
  51   1              {
  52   2                      if(dat&0x80)
  53   2                      bit_out=1;
  54   2                      else
  55   2                      bit_out=0;
C51 COMPILER V7.06   MLX90614                                                              02/19/2020 11:27:54 PAGE 2   

  56   2                      send_bit();
  57   2                      dat=dat<<1;
  58   2              }
  59   1              receive_bit();
  60   1              if(bit_in==1)
  61   1              {
  62   2                      stop_bit();
  63   2                      if(n!=0)
  64   2                      {n--;}
  65   2                      else
  66   2                              return;
  67   2              }
  68   1              else
  69   1                      return;
  70   1              start_bit();
  71   1              tx_byte(dat_byte);              //函数自身回调
  72   1      }
  73          
  74          ////---------发送一个字节---------
  75          //void tx_byte(unsigned char dat_byte)
  76          //{
  77          //      char i,n,dat;
  78          //      n=Nack_counter;
  79          //      TX_again:
  80          //      dat=dat_byte;
  81          //      for(i=0;i<8;i++)
  82          //      {
  83          //              if(dat&0x80)
  84          //              bit_out=1;
  85          //              else
  86          //              bit_out=0;
  87          //              send_bit();
  88          //              dat=dat<<1;
  89          //      }
  90          //      receive_bit();
  91          //      if(bit_in==1)
  92          //      {
  93          //              stop_bit();
  94          //              if(n!=0)
  95          //              {n--;goto Repeat;}
  96          //              else
  97          //              goto exit;
  98          //      }
  99          //      else
 100          //      goto exit;
 101          //      Repeat:
 102          //      start_bit();
 103          //      goto TX_again;
 104          //      exit: ;
 105          //}
 106          //-----------发送一个位---------
 107          void send_bit(void)
 108          {
 109   1              if(bit_out==0)
 110   1                      SDA=0;
 111   1              else
 112   1                      SDA=1;
 113   1              _nop_();
 114   1              SCL=1;
 115   1              _nop_();_nop_();_nop_();_nop_();
 116   1              _nop_();_nop_();_nop_();_nop_();
 117   1              SCL=0;
C51 COMPILER V7.06   MLX90614                                                              02/19/2020 11:27:54 PAGE 3   

 118   1              _nop_();_nop_();_nop_();_nop_();
 119   1              _nop_();_nop_();_nop_();_nop_();
 120   1      }
 121          //----------接收一个字节--------
 122          unsigned char rx_byte(void)
 123          {
 124   1              unsigned char i,dat;
 125   1              dat=0;
 126   1              for(i=0;i<8;i++)
 127   1              {
 128   2                      dat=dat<<1;
 129   2                      receive_bit();
 130   2                      if(bit_in==1)
 131   2                      dat=dat+1;
 132   2              }
 133   1              send_bit();
 134   1              return dat;
 135   1      }
 136          //----------接收一个位----------
 137          void receive_bit(void)
 138          {
 139   1              SDA=1;bit_in=1;
 140   1              SCL=1;
 141   1              _nop_();_nop_();_nop_();_nop_();
 142   1              _nop_();_nop_();_nop_();_nop_();
 143   1              bit_in=SDA;
 144   1              _nop_();
 145   1              SCL=0;
 146   1              _nop_();_nop_();_nop_();_nop_();
 147   1              _nop_();_nop_();_nop_();_nop_();
 148   1      }
 149          
 150          //------------------------------
 151          unsigned int ReadObjectTemp(void)
 152          {
 153   1              start_bit();
 154   1              tx_byte(0x00); //Send SlaveAddress
 155   1              tx_byte(0x27); //Send Command
 156   1              start_bit();
 157   1              tx_byte(0x01);
 158   1              bit_out=0;
 159   1              DataL=rx_byte();
 160   1              bit_out=0;
 161   1              DataH=rx_byte();
 162   1              bit_out=1;
 163   1              Pecreg=rx_byte();
 164   1              stop_bit();
 165   1              return(DataH*256+DataL);
 166   1      }
 167          
 168          unsigned int ReadEnvironTemp(void)
 169          {
 170   1              start_bit();
 171   1              tx_byte(0x00); //Send SlaveAddress
 172   1              tx_byte(0x26); //Send Command
 173   1              start_bit();
 174   1              tx_byte(0x01);
 175   1              bit_out=0;
 176   1              DataL=rx_byte();
 177   1              bit_out=0;
 178   1              DataH=rx_byte();
 179   1              bit_out=1;
C51 COMPILER V7.06   MLX90614                                                              02/19/2020 11:27:54 PAGE 4   

 180   1              Pecreg=rx_byte();
 181   1              stop_bit();
 182   1              return(DataH*256+DataL);
 183   1      }
 184          
 185          
 186          //---------------------------------------
 187          //Name: CALTEMP           
 188          //Temperature data is T=(Data)*0.02-273.15
 189          
 190          //Tem=ReadObjectTemp();
 191          //objTemp=(float)(Tem)*0.02-273.15;
 192          //sprintf(tab_up,"O:%5.2f %05d ",objTemp,Tem);//打印温度值
 193          //LCD_Write_String(0,0,tab_up);//显示第一行
 194          //
 195          //Tem=ReadEnvironTemp();
 196          //envTemp=(float)(Tem)*0.02-273.15;
 197          //sprintf(tab_dw,"E:%5.2f %05d ",envTemp,Tem);//打印温度值
 198          //LCD_Write_String(0,1,tab_dw);//显示第一行
 199          //
 200          //DelayMs(200);
 201          
 202          /********************************************************************************
 203          
 204          *Function Name  : PEC_calculation
 205          
 206          *Description    : Calculates the PEC of received bytes
 207          
 208          *Input          : pec[]300.* Output         : None
 209          
 210          * Return         : pec[0]-this byte contains calculated crc value
 211          
 212          *******************************************************************************/
 213          
 214          unsigned char PEC_Calculation(unsigned char pec[])
 215          {
 216   1         unsigned char         crc[6];
 217   1         unsigned char        BitPosition=47;
 218   1         unsigned char        shift;
 219   1         unsigned char        i;
 220   1         unsigned char        j;
 221   1         unsigned char        temp;
 222   1         do
 223   1          {
 224   2              /*Load pattern value 0x000000000107*/
 225   2              crc[5]=0;
 226   2              crc[4]=0;
 227   2              crc[3]=0;
 228   2              crc[2]=0;
 229   2              crc[1]=0x01;
 230   2              crc[0]=0x07;
 231   2              /*Set maximum bit position at 47 ( six bytes byte5...byte0,MSbit=47)*/
 232   2              BitPosition=47;
 233   2              /*Set shift position at 0*/
 234   2              shift=0;
 235   2              /*Find first "1" in the transmited message beginning from the MSByte byte5*/
 236   2              i=5;
 237   2              j=0;
 238   2              while((pec[i]&(0x80>>j))==0 && i>0)
 239   2              {
 240   3                  BitPosition--;
 241   3                  if(j<7)
C51 COMPILER V7.06   MLX90614                                                              02/19/2020 11:27:54 PAGE 5   

 242   3                  {
 243   4                      j++;
 244   4                  }
 245   3                  else
 246   3                  {
 247   4                      j=0x00;
 248   4                      i--;
 249   4                  }
 250   3              }/*End of while */
 251   2              /*Get shift value for pattern value*/
 252   2              shift=BitPosition-8;
 253   2              /*Shift pattern value */
 254   2              while(shift)
 255   2              {
 256   3                  for(i=5; i<0xFF; i--)
 257   3                  {
 258   4                      if((crc[i-1]&0x80) && (i>0))
 259   4                      {
 260   5                          temp=1;
 261   5                      }
 262   4                      else
 263   4                      {
 264   5                          temp=0;
 265   5                      }
 266   4                      crc[i]<<=1;
 267   4                      crc[i]+=temp;
 268   4                  }/*End of for*/
 269   3                  shift--;
 270   3              }/*End of while*/
 271   2              /*Exclusive OR between pec and crc*/
 272   2              for(i=0; i<=5; i++)
 273   2              {
 274   3                  pec[i] ^=crc[i];
 275   3              }/*End of for*/
 276   2          }
 277   1          while(BitPosition>8); /*End of do-while*/
 278   1          return pec[0];
 279   1      }
 280          
*** WARNING C316 IN LINE 280 OF mlx90614.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    683    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      5      20
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
