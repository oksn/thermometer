C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE oled.c COMPACT BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          //////////////////////////////////////////////////////////////////////////////////
   2          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   3          //中景园电子
   4          //店铺地址：http://shop73023976.taobao.com/?spm=2013.1.0.0.M4PqC2
   5          //
   6          //  文 件 名   : main.c
   7          //  版 本 号   : v2.0
   8          //  作    者   : HuangKai
   9          //  生成日期   : 2014-0101
  10          //  最近修改   :
  11          //  功能描述   : OLED 4接口演示例程(51系列)
  12          //              说明:
  13          //              ----------------------------------------------------------------
  14          //              GND    电源地
  15          //              VCC  接5V或3.3v电源
  16          //              D0   P1^0（SCL）
  17          //              D1   P1^1（SDA）
  18          //              RES  接P12
  19          //              DC   接P13
  20          //              CS   接P14
  21          //              ----------------------------------------------------------------
  22          // 修改历史   :
  23          // 日    期   :
  24          // 作    者   : HuangKai
  25          // 修改内容   : 创建文件
  26          //版权所有，盗版必究。
  27          //Copyright(C) 中景园电子2014/3/16
  28          //All rights reserved
  29          //******************************************************************************/。
  30          #include "oled.h"
  31          #include "intrins.h"
  32          //#include "stdlib.h"
  33          #include "oledfont.h"
  34          
  35          #include "delay.h"
  36          //OLED的显存
  37          //存放格式如下.
  38          //[0]0 1 2 3 ... 127
  39          //[1]0 1 2 3 ... 127
  40          //[2]0 1 2 3 ... 127
  41          //[3]0 1 2 3 ... 127
  42          //[4]0 1 2 3 ... 127
  43          //[5]0 1 2 3 ... 127
  44          //[6]0 1 2 3 ... 127
  45          //[7]0 1 2 3 ... 127
  46          
  47          
  48          
  49          
  50          #if OLED_MODE==1
              //向SSD1106写入一个字节。
              //dat:要写入的数据/命令
              //cmd:数据/命令标志 0,表示命令;1,表示数据;
              void OLED_WR_Byte ( u8 dat, u8 cmd )
              {
C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 2   

                  DATAOUT ( dat );
                  if ( cmd )
                      OLED_DC_Set();
                  else
                      OLED_DC_Clr();
                  OLED_CS_Clr();
                  OLED_WR_Clr();
                  OLED_WR_Set();
                  OLED_CS_Set();
                  OLED_DC_Set();
              }
              #else
  68          //向SSD1306写入一个字节。
  69          //dat:要写入的数据/命令
  70          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  71          void OLED_WR_Byte ( u8 dat, u8 cmd )
  72          {
  73   1          u8 i;
  74   1          if ( cmd )
  75   1              OLED_DC_Set();
  76   1          else
  77   1              OLED_DC_Clr();
  78   1          OLED_CS_Clr();
  79   1          for ( i = 0; i < 8; i++ )
  80   1          {
  81   2              OLED_SCLK_Clr();
  82   2              if ( dat & 0x80 )
  83   2              {
  84   3                  OLED_SDIN_Set();
  85   3              }
  86   2              else
  87   2                  OLED_SDIN_Clr();
  88   2              OLED_SCLK_Set();
  89   2              dat <<= 1;
  90   2          }
  91   1          OLED_CS_Set();
  92   1          OLED_DC_Set();
  93   1      }
  94          #endif
  95          void OLED_Set_Pos ( unsigned char x, unsigned char y )
  96          {
  97   1          OLED_WR_Byte ( 0xb0 + y, OLED_CMD );
  98   1          OLED_WR_Byte ( ( ( x & 0xf0 ) >> 4 ) | 0x10, OLED_CMD );
  99   1          OLED_WR_Byte ( ( x & 0x0f ) | 0x01, OLED_CMD );
 100   1      }
 101          //开启OLED显示
 102          void OLED_Display_On ( void )
 103          {
 104   1          OLED_WR_Byte ( 0X8D, OLED_CMD ); //SET DCDC命令
 105   1          OLED_WR_Byte ( 0X14, OLED_CMD ); //DCDC ON
 106   1          OLED_WR_Byte ( 0XAF, OLED_CMD ); //DISPLAY ON
 107   1      }
 108          //关闭OLED显示
 109          void OLED_Display_Off ( void )
 110          {
 111   1          OLED_WR_Byte ( 0X8D, OLED_CMD ); //SET DCDC命令
 112   1          OLED_WR_Byte ( 0X10, OLED_CMD ); //DCDC OFF
 113   1          OLED_WR_Byte ( 0XAE, OLED_CMD ); //DISPLAY OFF
 114   1      }
 115          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!
 116          void OLED_Clear ( void )
 117          {
C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 3   

 118   1          u8 i, n;
 119   1          for ( i = 0; i < 8; i++ )
 120   1          {
 121   2              OLED_WR_Byte ( 0xb0 + i, OLED_CMD ); //设置页地址（0~7）
 122   2              OLED_WR_Byte ( 0x00, OLED_CMD );   //设置显示位置―列低地址
 123   2              OLED_WR_Byte ( 0x10, OLED_CMD );   //设置显示位置―列高地址
 124   2              for ( n = 0; n < 128; n++ ) OLED_WR_Byte ( 0, OLED_DATA );
 125   2          } //更新显示
 126   1      }
 127          
 128          
 129          //在指定位置显示一个字符,包括部分字符
 130          //x:0~127
 131          //y:0~63
 132          //mode:0,反白显示;1,正常显示
 133          //size:选择字体 16/12
 134          void OLED_ShowChar ( u8 x, u8 y, u8 chr )
 135          {
 136   1          unsigned char c = 0, i = 0;
 137   1          c = chr - ' '; //得到偏移后的值
 138   1          if ( x > Max_Column - 1 )
 139   1          {
 140   2              x = 0;
 141   2              y = y + 2;
 142   2          }
 143   1          if ( SIZE == 16 )
 144   1          {
 145   2              OLED_Set_Pos ( x, y );
 146   2              for ( i = 0; i < 8; i++ )
 147   2                  OLED_WR_Byte ( F8X16[c*16+i], OLED_DATA );
 148   2              OLED_Set_Pos ( x, y + 1 );
 149   2              for ( i = 0; i < 8; i++ )
 150   2                  OLED_WR_Byte ( F8X16[c*16+i+8], OLED_DATA );
 151   2          }
 152   1          else
 153   1          {
 154   2              OLED_Set_Pos ( x, y + 1 );
 155   2              for ( i = 0; i < 6; i++ )
 156   2                  OLED_WR_Byte ( F6x8[c][i], OLED_DATA );
 157   2      
 158   2          }
 159   1      }
 160          //m^n函数
 161          u32 oled_pow ( u8 m, u8 n )
 162          {
 163   1          u32 result = 1;
 164   1          while ( n-- ) result *= m;
 165   1          return result;
 166   1      }
 167          //显示2个数字
 168          //x,y :起点坐标
 169          //len :数字的位数
 170          //size:字体大小
 171          //mode:模式 0,填充模式;1,叠加模式
 172          //num:数值(0~4294967295);
 173          void OLED_ShowNum ( u8 x, u8 y, u32 num, u8 len, u8 size2 )
 174          {
 175   1          u8 t, temp;
 176   1          u8 enshow = 0;
 177   1          for ( t = 0; t < len; t++ )
 178   1          {
 179   2              temp = ( num / oled_pow ( 10, len - t - 1 ) ) % 10;
C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 4   

 180   2              if ( enshow == 0 && t < ( len - 1 ) )
 181   2              {
 182   3                  if ( temp == 0 )
 183   3                  {
 184   4                      OLED_ShowChar ( x + ( size2 / 2 ) *t, y, ' ' );
 185   4                      continue;
 186   4                  }
 187   3                  else enshow = 1;
 188   3      
 189   3              }
 190   2              OLED_ShowChar ( x + ( size2 / 2 ) *t, y, temp + '0' );
 191   2          }
 192   1      }
 193          //显示一个字符号串
 194          /*void OLED_ShowString(u8 x,u8 y,u8 *chr)
 195          {
 196              unsigned char j=0;
 197              while (chr[j]!='\0')
 198              {       OLED_ShowChar(x,y,chr[j]);
 199                      x+=8;
 200                  if(x>120){x=0;y+=2;}
 201                      j++;
 202              }
 203          }*/
 204          void OLED_ShowString ( u8 x, u8 y, u8 *chr )
 205          {
 206   1      
 207   1          while ( ( *chr ) != '\0' )
 208   1          {
 209   2              OLED_ShowChar ( x, y, *chr );
 210   2              x += 8;
 211   2              if ( x > 120 )
 212   2              {
 213   3                  x = 0;
 214   3                  y += 2;
 215   3              }
 216   2              chr++;
 217   2          }
 218   1      }
 219          
 220          //显示汉字
 221          void OLED_ShowCHinese ( u8 x, u8 y, u8 no )
 222          {
 223   1          u8 t, adder = 0;
 224   1          OLED_Set_Pos ( x, y );
 225   1          for ( t = 0; t < 16; t++ )
 226   1          {
 227   2              //      OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 228   2              OLED_WR_Byte ( Hzk[2*no][t], OLED_DATA );
 229   2              adder += 1;
 230   2          }
 231   1          OLED_Set_Pos ( x, y + 1 );
 232   1          for ( t = 0; t < 16; t++ )
 233   1          {
 234   2              //      OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 235   2              OLED_WR_Byte ( Hzk[2*no+1][t], OLED_DATA );
 236   2              adder += 1;
 237   2          }
 238   1      }
 239          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 240          void OLED_DrawBMP ( unsigned char x0, unsigned char y0, unsigned char x1, unsigned char y1, unsigned char 
C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 5   

             -BMP[] )
 241          {
 242   1          unsigned int j = 0;
 243   1          unsigned char x, y;
 244   1      
 245   1          if ( y1 % 8 == 0 ) y = y1 / 8;
 246   1          else y = y1 / 8 + 1;
 247   1          for ( y = y0; y < y1; y++ )
 248   1          {
 249   2              OLED_Set_Pos ( x0, y );
 250   2              for ( x = x0; x < x1; x++ )
 251   2              {
 252   3                  OLED_WR_Byte ( BMP[j++], OLED_DATA );
 253   3              }
 254   2          }
 255   1      }
 256          
 257          
 258          //初始化SSD1306
 259          void OLED_Init ( void )
 260          {
 261   1      
 262   1      
 263   1      
 264   1          OLED_RST_Set();
 265   1      //  delay_ms(100);
 266   1          Delay100ms();
 267   1          OLED_RST_Clr();
 268   1          //delay_ms(100);
 269   1          Delay100ms();
 270   1          OLED_RST_Set();
 271   1          /*
 272   1          OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 273   1          OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 274   1          OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 275   1          OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 276   1          OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 277   1          OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 278   1          OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 279   1          OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 280   1          OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 281   1          OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 282   1          OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 283   1          OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset   Shift Mapping RAM Counter (0x00~0x3F)
 284   1          OLED_WR_Byte(0x00,OLED_CMD);//-not offset
 285   1          OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 286   1          OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 287   1          OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 288   1          OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 289   1          OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 290   1          OLED_WR_Byte(0x12,OLED_CMD);
 291   1          OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 292   1          OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 293   1          OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 294   1          OLED_WR_Byte(0x02,OLED_CMD);//
 295   1          OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 296   1          OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 297   1          OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 298   1          OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7)
 299   1          OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 300   1          */
 301   1      
C51 COMPILER V7.06   OLED                                                                  02/19/2020 11:27:53 PAGE 6   

 302   1          OLED_WR_Byte ( 0xAE, OLED_CMD ); //--turn off oled panel
 303   1          OLED_WR_Byte ( 0x00, OLED_CMD ); //---set low column address
 304   1          OLED_WR_Byte ( 0x10, OLED_CMD ); //---set high column address
 305   1          OLED_WR_Byte ( 0x40, OLED_CMD ); //--set start line address  Set Mapping RAM Display Start Line (0x00~
             -0x3F)
 306   1          OLED_WR_Byte ( 0x81, OLED_CMD ); //--set contrast control register
 307   1          OLED_WR_Byte ( 0xCF, OLED_CMD ); // Set SEG Output Current Brightness
 308   1          OLED_WR_Byte ( 0xA1, OLED_CMD ); //--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 309   1          OLED_WR_Byte ( 0xC8, OLED_CMD ); //Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 310   1          OLED_WR_Byte ( 0xA6, OLED_CMD ); //--set normal display
 311   1          OLED_WR_Byte ( 0xA8, OLED_CMD ); //--set multiplex ratio(1 to 64)
 312   1          OLED_WR_Byte ( 0x3f, OLED_CMD ); //--1/64 duty
 313   1          OLED_WR_Byte ( 0xD3, OLED_CMD ); //-set display offset   Shift Mapping RAM Counter (0x00~0x3F)
 314   1          OLED_WR_Byte ( 0x00, OLED_CMD ); //-not offset
 315   1          OLED_WR_Byte ( 0xd5, OLED_CMD ); //--set display clock divide ratio/oscillator frequency
 316   1          OLED_WR_Byte ( 0x80, OLED_CMD ); //--set divide ratio, Set Clock as 100 Frames/Sec
 317   1          OLED_WR_Byte ( 0xD9, OLED_CMD ); //--set pre-charge period
 318   1          OLED_WR_Byte ( 0xF1, OLED_CMD ); //Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 319   1          OLED_WR_Byte ( 0xDA, OLED_CMD ); //--set com pins hardware configuration
 320   1          OLED_WR_Byte ( 0x12, OLED_CMD );
 321   1          OLED_WR_Byte ( 0xDB, OLED_CMD ); //--set vcomh
 322   1          OLED_WR_Byte ( 0x40, OLED_CMD ); //Set VCOM Deselect Level
 323   1          OLED_WR_Byte ( 0x20, OLED_CMD ); //-Set Page Addressing Mode (0x00/0x01/0x02)
 324   1          OLED_WR_Byte ( 0x02, OLED_CMD ); //
 325   1          OLED_WR_Byte ( 0x8D, OLED_CMD ); //--set Charge Pump enable/disable
 326   1          OLED_WR_Byte ( 0x14, OLED_CMD ); //--set(0x10) disable
 327   1          OLED_WR_Byte ( 0xA4, OLED_CMD ); // Disable Entire Display On (0xa4/0xa5)
 328   1          OLED_WR_Byte ( 0xA6, OLED_CMD ); // Disable Inverse Display On (0xa6/a7)
 329   1          OLED_WR_Byte ( 0xAF, OLED_CMD ); //--turn on oled panel
 330   1      
 331   1          OLED_WR_Byte ( 0xAF, OLED_CMD ); /*display ON*/
 332   1          OLED_Clear();
 333   1          OLED_Set_Pos ( 0, 0 );
 334   1      }
 335          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    894    ----
   CONSTANT SIZE    =   3096    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      26
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
